// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUItestForm1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod2 - Use 'RecordedMethod2Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod2()
        {
            #region Variable Declarations
            WinWindow uIThêmMớiWindow = this.UIKháchHàngWindow.UIDANHMỤCKHÁCHHÀNGClient.UIThêmMớiWindow;
            WinEdit uITxtmaEdit = this.UIKháchHàngWindow.UITxtmaWindow.UITxtmaEdit;
            WinWindow uITxttenWindow = this.UIKháchHàngWindow.UIPanel3Window.UITxttenWindow;
            WinEdit uITxttenEdit = this.UIKháchHàngWindow.UITxttenWindow.UITxttenEdit;
            WinWindow uITxtSDTWindow = this.UIKháchHàngWindow.UIPanel3Window.UITxtSDTWindow;
            WinEdit uITxtSDTEdit = this.UIKháchHàngWindow.UITxtSDTWindow.UITxtSDTEdit;
            WinWindow uILưuWindow = this.UIKháchHàngWindow.UIDANHMỤCKHÁCHHÀNGClient.UILưuWindow;
            WinWindow uITxtTrangThaiWindow = this.UIKháchHàngWindow.UIPanel3Window.UITxtTrangThaiWindow;
            #endregion

            // Click 'Thêm Mới' window
            Mouse.Click(uIThêmMớiWindow, new Point(361, 124));

            // Type 'KH13' in 'txtma' text box
            uITxtmaEdit.Text = this.RecordedMethod2Params.UITxtmaEditText;

            // Click 'txtten' window
            Mouse.Click(uITxttenWindow, new Point(398, 263));

            // Type 'HHH' in 'txtten' text box
            uITxttenEdit.Text = this.RecordedMethod2Params.UITxttenEditText;

            // Click 'txtSDT' window
            Mouse.Click(uITxtSDTWindow, new Point(383, 277));

            // Type '9999' in 'txtSDT' text box
            uITxtSDTEdit.Text = this.RecordedMethod2Params.UITxtSDTEditText;

            // Click 'Lưu' window
            Mouse.Click(uILưuWindow, new Point(355, 119));

            // Click 'txtTrangThai' window
            Mouse.Click(uITxtTrangThaiWindow, new Point(416, 287));
        }
        
        /// <summary>
        /// RecordedMethod3 - Use 'RecordedMethod3Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod3()
        {
            #region Variable Declarations
            WinClient uIPanel1Client = this.UIKháchHàngWindow.UIPanel1Window.UIPanel1Client;
            WinButton uIThêmMớiButton = this.UIKháchHàngWindow.UIThêmMớiWindow.UIThêmMớiButton;
            WinEdit uITxtmaEdit1 = this.UIKháchHàngWindow.UITxtmaWindow.UITxtmaEdit1;
            WinEdit uITxtmaEdit2 = this.UIKháchHàngWindow.UITxtmaWindow.UITxtmaEdit2;
            WinEdit uITxttenEdit1 = this.UIKháchHàngWindow.UITxttenWindow.UITxttenEdit1;
            WinEdit uITxttenEdit2 = this.UIKháchHàngWindow.UITxttenWindow.UITxttenEdit2;
            WinEdit uITxtSDTEdit1 = this.UIKháchHàngWindow.UITxtSDTWindow.UITxtSDTEdit1;
            WinEdit uITxtSDTEdit2 = this.UIKháchHàngWindow.UITxtSDTWindow.UITxtSDTEdit2;
            WinButton uILưuButton = this.UIKháchHàngWindow.UILưuWindow.UILưuButton;
            WinWindow uITxtTrangThaiWindow1 = this.UIKháchHàngWindow.UIPanel3Window.UITxtTrangThaiWindow1;
            #endregion

            // Click 'panel1' client
            Mouse.Click(uIPanel1Client, new Point(399, 41));

            // Type '{Enter}' in 'Thêm Mới' button
            Keyboard.SendKeys(uIThêmMớiButton, this.RecordedMethod3Params.UIThêmMớiButtonSendKeys, ModifierKeys.None);

            Keyboard.SendKeys("kh13");
            // Type 'kh15' in 'txtma' text box
            //uITxtmaEdit1.Text = this.RecordedMethod3Params.UITxtmaEdit1Text;

            // Type '{Tab}' in 'txtma' text box
            Keyboard.SendKeys(uITxtmaEdit2, this.RecordedMethod3Params.UITxtmaEdit2SendKeys, ModifierKeys.None);

            Keyboard.SendKeys("tt");
            // Type 'ttt' in 'txtten' text box
            //uITxttenEdit1.Text = this.RecordedMethod3Params.UITxttenEdit1Text;

            // Type '{Tab}' in 'txtten' text box
            Keyboard.SendKeys(uITxttenEdit2, this.RecordedMethod3Params.UITxttenEdit2SendKeys, ModifierKeys.None);

            Keyboard.SendKeys("0123");
            // Type '12345' in 'txtSDT' text box
            //uITxtSDTEdit1.Text = this.RecordedMethod3Params.UITxtSDTEdit1Text;

            // Type '{Tab}' in 'txtSDT' text box
            Keyboard.SendKeys(uITxtSDTEdit2, this.RecordedMethod3Params.UITxtSDTEdit2SendKeys, ModifierKeys.None);

            // Type '{Enter}' in 'Lưu' button
            Keyboard.SendKeys(uILưuButton, this.RecordedMethod3Params.UILưuButtonSendKeys, ModifierKeys.None);

            // Click 'txtTrangThai' window
            Mouse.Click(uITxtTrangThaiWindow1, new Point(308, 285));
        }
        
        /// <summary>
        /// AssertMethod1 - Use 'AssertMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
       
        /// <summary>
        /// AssertMethod2 - Use 'AssertMethod2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod2()
        {
            #region Variable Declarations
            WinEdit uITxtTrangThaiWindow1 = this.UIKháchHàngWindow.UITxtTrangThaiWindow.UITxtTrangThaiEdit;
            #endregion

            // Verify that the 'ControlName' property of 'txtTrangThai' window equals 'Thêm thành công'
            Assert.AreEqual(this.AssertMethod2ExpectedValues.UITxtTrangThaiWindow1ControlName, uITxtTrangThaiWindow1.Text, "Lỗi thêm");
        }
        
        #region Properties
        public virtual RecordedMethod2Params RecordedMethod2Params
        {
            get
            {
                if ((this.mRecordedMethod2Params == null))
                {
                    this.mRecordedMethod2Params = new RecordedMethod2Params();
                }
                return this.mRecordedMethod2Params;
            }
        }
        
        public virtual RecordedMethod3Params RecordedMethod3Params
        {
            get
            {
                if ((this.mRecordedMethod3Params == null))
                {
                    this.mRecordedMethod3Params = new RecordedMethod3Params();
                }
                return this.mRecordedMethod3Params;
            }
        }
        
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public virtual AssertMethod2ExpectedValues AssertMethod2ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod2ExpectedValues == null))
                {
                    this.mAssertMethod2ExpectedValues = new AssertMethod2ExpectedValues();
                }
                return this.mAssertMethod2ExpectedValues;
            }
        }
        
        public UIForm1Window UIForm1Window
        {
            get
            {
                if ((this.mUIForm1Window == null))
                {
                    this.mUIForm1Window = new UIForm1Window();
                }
                return this.mUIForm1Window;
            }
        }
        
        public UIKháchHàngWindow UIKháchHàngWindow
        {
            get
            {
                if ((this.mUIKháchHàngWindow == null))
                {
                    this.mUIKháchHàngWindow = new UIKháchHàngWindow();
                }
                return this.mUIKháchHàngWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod2Params mRecordedMethod2Params;
        
        private RecordedMethod3Params mRecordedMethod3Params;
        
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private AssertMethod2ExpectedValues mAssertMethod2ExpectedValues;
        
        private UIForm1Window mUIForm1Window;
        
        private UIKháchHàngWindow mUIKháchHàngWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedMethod2Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'KH13' in 'txtma' text box
        /// </summary>
        public string UITxtmaEditText = "KH13";
        
        /// <summary>
        /// Type 'HHH' in 'txtten' text box
        /// </summary>
        public string UITxttenEditText = "HHH";
        
        /// <summary>
        /// Type '9999' in 'txtSDT' text box
        /// </summary>
        public string UITxtSDTEditText = "9999";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedMethod3Params
    {
        
        #region Fields
        /// <summary>
        /// Type '{Enter}' in 'Thêm Mới' button
        /// </summary>
        public string UIThêmMớiButtonSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'kh15' in 'txtma' text box
        /// </summary>
        public string UITxtmaEdit1Text = "kh15";
        
        /// <summary>
        /// Type '{Tab}' in 'txtma' text box
        /// </summary>
        public string UITxtmaEdit2SendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'ttt' in 'txtten' text box
        /// </summary>
        public string UITxttenEdit1Text = "ttt";
        
        /// <summary>
        /// Type '{Tab}' in 'txtten' text box
        /// </summary>
        public string UITxttenEdit2SendKeys = "{Tab}";
        
        /// <summary>
        /// Type '12345' in 'txtSDT' text box
        /// </summary>
        public string UITxtSDTEdit1Text = "12345";
        
        /// <summary>
        /// Type '{Tab}' in 'txtSDT' text box
        /// </summary>
        public string UITxtSDTEdit2SendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Enter}' in 'Lưu' button
        /// </summary>
        public string UILưuButtonSendKeys = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlName' property of 'txtTrangThai' window equals 'txtTrangThai'
        /// </summary>
        public string UITxtTrangThaiWindow1ControlName = "txtTrangThai";
        
        /// <summary>
        /// Verify that the 'ControlName' property of 'txtTrangThai' window equals 'Thêm thành công'
        /// </summary>
        public string UITxtTrangThaiWindow1ControlName1 = "Thêm thành công";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlName' property of 'txtTrangThai' window equals 'Thêm thành công'
        /// </summary>
        public string UITxtTrangThaiWindow1ControlName = "Thêm thành công";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIForm1Window : WinWindow
    {
        
        public UIForm1Window()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Form1";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public UIComboBox1Window UIComboBox1Window
        {
            get
            {
                if ((this.mUIComboBox1Window == null))
                {
                    this.mUIComboBox1Window = new UIComboBox1Window(this);
                }
                return this.mUIComboBox1Window;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIButton1Window UIButton1Window
        {
            get
            {
                if ((this.mUIButton1Window == null))
                {
                    this.mUIButton1Window = new UIButton1Window(this);
                }
                return this.mUIButton1Window;
            }
        }
        #endregion
        
        #region Fields
        private UIComboBox1Window mUIComboBox1Window;
        
        private UIItemWindow mUIItemWindow;
        
        private UIButton1Window mUIButton1Window;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIComboBox1Window : WinWindow
    {
        
        public UIComboBox1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "comboBox1";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIComboBox1ComboBox
        {
            get
            {
                if ((this.mUIComboBox1ComboBox == null))
                {
                    this.mUIComboBox1ComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIComboBox1ComboBox.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIComboBox1ComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIComboBox1ComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIButton1Window : WinWindow
    {
        
        public UIButton1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button1";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UIButton1Button
        {
            get
            {
                if ((this.mUIButton1Button == null))
                {
                    this.mUIButton1Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIButton1Button.SearchProperties[WinButton.PropertyNames.Name] = "button1";
                    this.mUIButton1Button.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIButton1Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIButton1Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIKháchHàngWindow : WinWindow
    {
        
        public UIKháchHàngWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Khách Hàng";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Khách Hàng");
            #endregion
        }
        
        #region Properties
        public UIDANHMỤCKHÁCHHÀNGClient UIDANHMỤCKHÁCHHÀNGClient
        {
            get
            {
                if ((this.mUIDANHMỤCKHÁCHHÀNGClient == null))
                {
                    this.mUIDANHMỤCKHÁCHHÀNGClient = new UIDANHMỤCKHÁCHHÀNGClient(this);
                }
                return this.mUIDANHMỤCKHÁCHHÀNGClient;
            }
        }
        
        public UITxtmaWindow UITxtmaWindow
        {
            get
            {
                if ((this.mUITxtmaWindow == null))
                {
                    this.mUITxtmaWindow = new UITxtmaWindow(this);
                }
                return this.mUITxtmaWindow;
            }
        }
        
        public UIPanel3Window UIPanel3Window
        {
            get
            {
                if ((this.mUIPanel3Window == null))
                {
                    this.mUIPanel3Window = new UIPanel3Window(this);
                }
                return this.mUIPanel3Window;
            }
        }
        
        public UITxttenWindow UITxttenWindow
        {
            get
            {
                if ((this.mUITxttenWindow == null))
                {
                    this.mUITxttenWindow = new UITxttenWindow(this);
                }
                return this.mUITxttenWindow;
            }
        }
        
        public UITxtSDTWindow UITxtSDTWindow
        {
            get
            {
                if ((this.mUITxtSDTWindow == null))
                {
                    this.mUITxtSDTWindow = new UITxtSDTWindow(this);
                }
                return this.mUITxtSDTWindow;
            }
        }
        
        public UIPanel1Window UIPanel1Window
        {
            get
            {
                if ((this.mUIPanel1Window == null))
                {
                    this.mUIPanel1Window = new UIPanel1Window(this);
                }
                return this.mUIPanel1Window;
            }
        }

        public UITxtTrangThaiWindow UITxtTrangThaiWindow
        {
            get
            {
                if ((this.mUITrangThaiWindow == null))
                {
                    this.mUITrangThaiWindow = new UITxtTrangThaiWindow(this);
                }
                return this.mUITrangThaiWindow;
            }
        }

        


        
        public UIThêmMớiWindow UIThêmMớiWindow
        {
            get
            {
                if ((this.mUIThêmMớiWindow == null))
                {
                    this.mUIThêmMớiWindow = new UIThêmMớiWindow(this);
                }
                return this.mUIThêmMớiWindow;
            }
        }
        
        public UILưuWindow UILưuWindow
        {
            get
            {
                if ((this.mUILưuWindow == null))
                {
                    this.mUILưuWindow = new UILưuWindow(this);
                }
                return this.mUILưuWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIDANHMỤCKHÁCHHÀNGClient mUIDANHMỤCKHÁCHHÀNGClient;
        
        private UITxtmaWindow mUITxtmaWindow;
        
        private UIPanel3Window mUIPanel3Window;
        
        private UITxttenWindow mUITxttenWindow;
        
        private UITxtSDTWindow mUITxtSDTWindow;
        
        private UIPanel1Window mUIPanel1Window;
        
        private UIThêmMớiWindow mUIThêmMớiWindow;

        private UITxtTrangThaiWindow mUITrangThaiWindow;
        private UILưuWindow mUILưuWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDANHMỤCKHÁCHHÀNGClient : WinClient
    {
        
        public UIDANHMỤCKHÁCHHÀNGClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "DANH MỤC KHÁCH HÀNG";
            this.WindowTitles.Add("Khách Hàng");
            #endregion
        }
        
        #region Properties
        public WinWindow UIThêmMớiWindow
        {
            get
            {
                if ((this.mUIThêmMớiWindow == null))
                {
                    this.mUIThêmMớiWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIThêmMớiWindow.SearchProperties[WinWindow.PropertyNames.Name] = "Thêm Mới";
                    this.mUIThêmMớiWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.BUTTON", PropertyExpressionOperator.Contains));
                    this.mUIThêmMớiWindow.WindowTitles.Add("Khách Hàng");
                    #endregion
                }
                return this.mUIThêmMớiWindow;
            }
        }
        
        public WinWindow UILưuWindow
        {
            get
            {
                if ((this.mUILưuWindow == null))
                {
                    this.mUILưuWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUILưuWindow.SearchProperties[WinWindow.PropertyNames.Name] = "Lưu";
                    this.mUILưuWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.BUTTON", PropertyExpressionOperator.Contains));
                    this.mUILưuWindow.WindowTitles.Add("Khách Hàng");
                    #endregion
                }
                return this.mUILưuWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUIThêmMớiWindow;
        
        private WinWindow mUILưuWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITxtmaWindow : WinWindow
    {
        
        public UITxtmaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtma";
            this.WindowTitles.Add("Khách Hàng");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtmaEdit
        {
            get
            {
                if ((this.mUITxtmaEdit == null))
                {
                    this.mUITxtmaEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtmaEdit.WindowTitles.Add("Khách Hàng");
                    #endregion
                }
                return this.mUITxtmaEdit;
            }
        }
        
        public WinEdit UITxtmaEdit1
        {
            get
            {
                if ((this.mUITxtmaEdit1 == null))
                {
                    this.mUITxtmaEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtmaEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Số điện thoại";
                    this.mUITxtmaEdit1.WindowTitles.Add("Khách Hàng");
                    #endregion
                }
                return this.mUITxtmaEdit1;
            }
        }
        
        public WinEdit UITxtmaEdit2
        {
            get
            {
                if ((this.mUITxtmaEdit2 == null))
                {
                    this.mUITxtmaEdit2 = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtmaEdit2.SearchProperties[WinEdit.PropertyNames.Name] = "Số điện thoại";
                    this.mUITxtmaEdit2.WindowTitles.Add("Khách Hàng");
                    #endregion
                }
                return this.mUITxtmaEdit2;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtmaEdit;
        
        private WinEdit mUITxtmaEdit1;
        
        private WinEdit mUITxtmaEdit2;
        #endregion
    }



    //trangthai
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITxtTrangThaiWindow : WinWindow
    {

        public UITxtTrangThaiWindow(UITestControl searchLimitContainer) :
            base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtTrangThai";
            this.WindowTitles.Add("Khách Hàng");
            #endregion
        }

        #region Properties
        public WinEdit UITxtTrangThaiEdit
        {
            get
            {
                if ((this.mUITxtTrangThaiEdit == null))
                {
                    this.mUITxtTrangThaiEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtTrangThaiEdit.WindowTitles.Add("Trạng Thái");
                    #endregion
                }
                return this.mUITxtTrangThaiEdit;
            }
        }

        public WinEdit UITxtTrangThaiEdit1
        {
            get
            {
                if ((this.mUITxtTrangThaiEdit1 == null))
                {
                    this.mUITxtTrangThaiEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtTrangThaiEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Trạng Thái";
                    this.mUITxtTrangThaiEdit1.WindowTitles.Add("Trạng Thái");
                    #endregion
                }
                return this.mUITxtTrangThaiEdit1;
            }
        }

        public WinEdit UITxtTrangThaiEdit2
        {
            get
            {
                if ((this.mUITxtTrangThaiEdit2 == null))
                {
                    this.mUITxtTrangThaiEdit2 = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtTrangThaiEdit2.SearchProperties[WinEdit.PropertyNames.Name] = "Trạng Thái";
                    this.mUITxtTrangThaiEdit2.WindowTitles.Add("Trạng Thái");
                    #endregion
                }
                return this.UITxtTrangThaiEdit2;
            }
        }
        #endregion

        #region Fields
        private WinEdit mUITxtTrangThaiEdit;

        private WinEdit mUITxtTrangThaiEdit1;

        private WinEdit mUITxtTrangThaiEdit2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIPanel3Window : WinWindow
    {
        
        public UIPanel3Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "panel3";
            this.WindowTitles.Add("Khách Hàng");
            #endregion
        }
        
        #region Properties
        public WinWindow UITxttenWindow
        {
            get
            {
                if ((this.mUITxttenWindow == null))
                {
                    this.mUITxttenWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUITxttenWindow.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Mã Khách Hàng";
                    this.mUITxttenWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUITxttenWindow.WindowTitles.Add("Khách Hàng");
                    #endregion
                }
                return this.mUITxttenWindow;
            }
        }
        
        public WinWindow UITxtSDTWindow
        {
            get
            {
                if ((this.mUITxtSDTWindow == null))
                {
                    this.mUITxtSDTWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUITxtSDTWindow.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Số điện thoại";
                    this.mUITxtSDTWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUITxtSDTWindow.WindowTitles.Add("Khách Hàng");
                    #endregion
                }
                return this.mUITxtSDTWindow;
            }
        }
        
        public WinWindow UITxtTrangThaiWindow
        {
            get
            {
                if ((this.mUITxtTrangThaiWindow == null))
                {
                    this.mUITxtTrangThaiWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUITxtTrangThaiWindow.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Trạng Thái";
                    this.mUITxtTrangThaiWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUITxtTrangThaiWindow.WindowTitles.Add("Khách Hàng");
                    #endregion
                }
                return this.mUITxtTrangThaiWindow;
            }
        }
        
        public WinWindow UITxtTrangThaiWindow1
        {
            get
            {
                if ((this.mUITxtTrangThaiWindow1 == null))
                {
                    this.mUITxtTrangThaiWindow1 = new WinWindow(this);
                    #region Search Criteria
                    this.mUITxtTrangThaiWindow1.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUITxtTrangThaiWindow1.WindowTitles.Add("Khách Hàng");
                    #endregion
                }
                return this.mUITxtTrangThaiWindow1;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUITxttenWindow;
        
        private WinWindow mUITxtSDTWindow;
        
        private WinWindow mUITxtTrangThaiWindow;
        
        private WinWindow mUITxtTrangThaiWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITxttenWindow : WinWindow
    {
        
        public UITxttenWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtten";
            this.WindowTitles.Add("Khách Hàng");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxttenEdit
        {
            get
            {
                if ((this.mUITxttenEdit == null))
                {
                    this.mUITxttenEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxttenEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Mã Khách Hàng";
                    this.mUITxttenEdit.WindowTitles.Add("Khách Hàng");
                    #endregion
                }
                return this.mUITxttenEdit;
            }
        }
        
        public WinEdit UITxttenEdit1
        {
            get
            {
                if ((this.mUITxttenEdit1 == null))
                {
                    this.mUITxttenEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxttenEdit1.WindowTitles.Add("Khách Hàng");
                    #endregion
                }
                return this.mUITxttenEdit1;
            }
        }
        
        public WinEdit UITxttenEdit2
        {
            get
            {
                if ((this.mUITxttenEdit2 == null))
                {
                    this.mUITxttenEdit2 = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxttenEdit2.WindowTitles.Add("Khách Hàng");
                    #endregion
                }
                return this.mUITxttenEdit2;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxttenEdit;
        
        private WinEdit mUITxttenEdit1;
        
        private WinEdit mUITxttenEdit2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITxtSDTWindow : WinWindow
    {
        
        public UITxtSDTWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtSDT";
            this.WindowTitles.Add("Khách Hàng");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtSDTEdit
        {
            get
            {
                if ((this.mUITxtSDTEdit == null))
                {
                    this.mUITxtSDTEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtSDTEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Số điện thoại";
                    this.mUITxtSDTEdit.WindowTitles.Add("Khách Hàng");
                    #endregion
                }
                return this.mUITxtSDTEdit;
            }
        }
        
        public WinEdit UITxtSDTEdit1
        {
            get
            {
                if ((this.mUITxtSDTEdit1 == null))
                {
                    this.mUITxtSDTEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtSDTEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Trạng Thái";
                    this.mUITxtSDTEdit1.WindowTitles.Add("Khách Hàng");
                    #endregion
                }
                return this.mUITxtSDTEdit1;
            }
        }
        
        public WinEdit UITxtSDTEdit2
        {
            get
            {
                if ((this.mUITxtSDTEdit2 == null))
                {
                    this.mUITxtSDTEdit2 = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtSDTEdit2.SearchProperties[WinEdit.PropertyNames.Name] = "Trạng Thái";
                    this.mUITxtSDTEdit2.WindowTitles.Add("Khách Hàng");
                    #endregion
                }
                return this.mUITxtSDTEdit2;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtSDTEdit;
        
        private WinEdit mUITxtSDTEdit1;
        
        private WinEdit mUITxtSDTEdit2;


       
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIPanel1Window : WinWindow
    {
        
        public UIPanel1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "panel1";
            this.WindowTitles.Add("Khách Hàng");
            #endregion
        }
        
        #region Properties
        public WinClient UIPanel1Client
        {
            get
            {
                if ((this.mUIPanel1Client == null))
                {
                    this.mUIPanel1Client = new WinClient(this);
                    #region Search Criteria
                    this.mUIPanel1Client.WindowTitles.Add("Khách Hàng");
                    #endregion
                }
                return this.mUIPanel1Client;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIPanel1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIThêmMớiWindow : WinWindow
    {
        
        public UIThêmMớiWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btmoi";
            this.WindowTitles.Add("Khách Hàng");
            #endregion
        }
        
        #region Properties
        public WinButton UIThêmMớiButton
        {
            get
            {
                if ((this.mUIThêmMớiButton == null))
                {
                    this.mUIThêmMớiButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIThêmMớiButton.SearchProperties[WinButton.PropertyNames.Name] = "Thêm Mới";
                    this.mUIThêmMớiButton.WindowTitles.Add("Khách Hàng");
                    #endregion
                }
                return this.mUIThêmMớiButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIThêmMớiButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UILưuWindow : WinWindow
    {
        
        public UILưuWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btluu";
            this.WindowTitles.Add("Khách Hàng");
            #endregion
        }
        
        #region Properties
        public WinButton UILưuButton
        {
            get
            {
                if ((this.mUILưuButton == null))
                {
                    this.mUILưuButton = new WinButton(this);
                    #region Search Criteria
                    this.mUILưuButton.SearchProperties[WinButton.PropertyNames.Name] = "Lưu";
                    this.mUILưuButton.WindowTitles.Add("Khách Hàng");
                    #endregion
                }
                return this.mUILưuButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUILưuButton;
        #endregion
    }
}
