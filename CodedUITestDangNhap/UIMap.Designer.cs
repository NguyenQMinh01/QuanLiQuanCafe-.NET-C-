// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestDangNhap
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// assertMethod
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            WinWindow uIExitWindow = this.UIĐăngNhậpWindow.UIĐăngNhậpClient.UIExitWindow;
            #endregion

            // Verify that the 'ControlName' property of 'Exit' window equals 'Đăng nhập thành công'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UIExitWindowControlName, uIExitWindow.ControlName, "lỗi");
        }
        
        /// <summary>
        /// AssertMethod2 - Use 'AssertMethod2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod2()
        {
            #region Variable Declarations
            WinEdit uIExitWindow = this.UIĐăngNhậpWindow.UITrangThaiWindow.UITxtTrangThaiEdit;
            #endregion

            // Verify that the 'ControlName' property of 'Exit' window equals 'Đăng nhập thành công'
            Assert.AreEqual(this.AssertMethod2ExpectedValues.UITxtTrangThaiEditControlName, uIExitWindow.Text, "lỗi");
        }


        public void AssertMethod3()
        {
            #region Variable Declarations
            WinEdit uIExitWindow = this.UIĐăngNhậpWindow.UITrangThaiWindow.UITxtTrangThaiEdit;
            #endregion

            // Verify that the 'ControlName' property of 'Exit' window equals 'Đăng nhập thành công'
            Assert.AreEqual("Tài khoản đăng nhập chưa đúng", uIExitWindow.Text, "lỗi");
        }
        /// <summary>
        /// dd
        /// </summary>
        public void RecordedMethod5()
        {
            #region Variable Declarations
            //WinWindow uITxtuserWindow = this.UIĐăngNhậpWindow.UIĐăngNhậpClient.UITxtuserWindow;
            WinEdit uITxtuserEdit = this.UIĐăngNhậpWindow.UITxtuserWindow.UITxtuserEdit;
            WinEdit uITxtpassEdit = this.UIĐăngNhậpWindow.UITxtpassWindow.UITxtpassEdit;
            WinButton uIOKButton = this.UIĐăngNhậpWindow.UIOKWindow.UIOKButton;
            WinEdit uITxtTrangThaiWindow = this.UIĐăngNhậpWindow.UITrangThaiWindow.UITxtTrangThaiEdit;
            //WinWindow uITxtTrangThaiWindow = this.UIĐăngNhậpWindow.UIĐăngNhậpClient.UITxtTrangThaiWindow;
            #endregion

            // Click 'txtuser' window
            //Mouse.Click(uITxtuserWindow, new Point(481, 145));

            // Type 'nv01' in 'txtuser' text box
            //uITxtuserEdit.Text = this.RecordedMethod5Params.UITxtuserEditText;
            uITxtuserEdit.SetFocus();
            uITxtuserEdit.SelectionStart = 0;
            Keyboard.SendKeys("nv01");
            // Type '{Tab}' in 'txtuser' text box
            Keyboard.SendKeys(uITxtuserEdit, this.RecordedMethod5Params.UITxtuserEditSendKeys, ModifierKeys.None);
            uITxtpassEdit.SelectionStart = 0;
            Keyboard.SendKeys("admin");
            // Type '********' in 'txtpass' text box
            //Keyboard.SendKeys(uITxtpassEdit, this.RecordedMethod5Params.UITxtpassEditSendKeys, true);

            // Type '{Enter}' in 'OK' button
            Keyboard.SendKeys(uIOKButton, this.RecordedMethod5Params.UIOKButtonSendKeys, ModifierKeys.None);

            // Click 'txtTrangThai' window
            Mouse.Click(uITxtTrangThaiWindow, new Point(532, 196));
        }


        public void RecordedMethod6()
        {
            #region Variable Declarations
            //WinWindow uITxtuserWindow = this.UIĐăngNhậpWindow.UIĐăngNhậpClient.UITxtuserWindow;
            WinEdit uITxtuserEdit = this.UIĐăngNhậpWindow.UITxtuserWindow.UITxtuserEdit;
            WinEdit uITxtpassEdit = this.UIĐăngNhậpWindow.UITxtpassWindow.UITxtpassEdit;
            WinButton uIOKButton = this.UIĐăngNhậpWindow.UIOKWindow.UIOKButton;
            WinEdit uITxtTrangThaiWindow = this.UIĐăngNhậpWindow.UITrangThaiWindow.UITxtTrangThaiEdit;
            //WinWindow uITxtTrangThaiWindow = this.UIĐăngNhậpWindow.UIĐăngNhậpClient.UITxtTrangThaiWindow;
            #endregion


            //Mouse.Click(new WinEdit(this.UIĐăngNhậpWindow.UIOKWindow.UIOKButton));

          
        
            // Type 'nv01' in 'txtuser' text box
            //uITxtuserEdit.Text = this.RecordedMethod5Params.UITxtuserEditText;
            Keyboard.SendKeys("nvkk");
              
            // Type '{Tab}' in 'txtuser' text box
            Keyboard.SendKeys(uITxtuserEdit, this.RecordedMethod5Params.UITxtuserEditSendKeys, ModifierKeys.None);
            uITxtpassEdit.SelectionStart = 0;
            Keyboard.SendKeys("ad");
            // Type '********' in 'txtpass' text box
            //Keyboard.SendKeys(uITxtpassEdit, this.RecordedMethod5Params.UITxtpassEditSendKeys, true);

            // Type '{Enter}' in 'OK' button
            Keyboard.SendKeys(uIOKButton, this.RecordedMethod5Params.UIOKButtonSendKeys, ModifierKeys.None);

            // Click 'txtTrangThai' window
            Mouse.Click(uITxtTrangThaiWindow, new Point(532, 196));
        }
        
        #region Properties
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public virtual AssertMethod2ExpectedValues AssertMethod2ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod2ExpectedValues == null))
                {
                    this.mAssertMethod2ExpectedValues = new AssertMethod2ExpectedValues();
                }
                return this.mAssertMethod2ExpectedValues;
            }
        }
        
        public virtual RecordedMethod5Params RecordedMethod5Params
        {
            get
            {
                if ((this.mRecordedMethod5Params == null))
                {
                    this.mRecordedMethod5Params = new RecordedMethod5Params();
                }
                return this.mRecordedMethod5Params;
            }
        }
        
        public UIĐăngNhậpWindow UIĐăngNhậpWindow
        {
            get
            {
                if ((this.mUIĐăngNhậpWindow == null))
                {
                    this.mUIĐăngNhậpWindow = new UIĐăngNhậpWindow();
                }
                return this.mUIĐăngNhậpWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private AssertMethod2ExpectedValues mAssertMethod2ExpectedValues;
        
        private RecordedMethod5Params mRecordedMethod5Params;
        
        private UIĐăngNhậpWindow mUIĐăngNhậpWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlName' property of 'Exit' window equals 'Đăng nhập thành công'
        /// </summary>
        public string UIExitWindowControlName = "Đăng nhập thành công";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlName' property of 'Exit' window equals 'Đăng nhập thành công'
        /// </summary>
        public string UITxtTrangThaiEditControlName = "Đăng nhập thành công";
        #endregion
    }

    public class AssertMethod3ExpectedValues
    {

        #region Fields
        /// <summary>
        /// Verify that the 'ControlName' property of 'Exit' window equals 'Đăng nhập thành công'
        /// </summary>
        public string UITxtTrangThaiEditControlName = "Đăng nhập không thành công";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod5'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedMethod5Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'nv01' in 'txtuser' text box
        /// </summary>
        public string UITxtuserEditText = "nv01";
        
        /// <summary>
        /// Type '{Tab}' in 'txtuser' text box
        /// </summary>
        public string UITxtuserEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'txtpass' text box
        /// </summary>
        /// 
        public string UITxtpassEditText = "nAI/+1YbLXAzMC+MylAiumF+gga6bwns";
        //public string UITxtpassEditSendKeys = "nAI/+1YbLXAzMC+MylAiumF+gga6bwns";
        
        /// <summary>
        /// Type '{Enter}' in 'OK' button
        /// </summary>
        public string UIOKButtonSendKeys = "{Enter}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIĐăngNhậpWindow : WinWindow
    {
        
        public UIĐăngNhậpWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Đăng Nhập";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Đăng Nhập");
            #endregion
        }
        
        #region Properties
        public UIĐăngNhậpClient UIĐăngNhậpClient
        {
            get
            {
                if ((this.mUIĐăngNhậpClient == null))
                {
                    this.mUIĐăngNhậpClient = new UIĐăngNhậpClient(this);
                }
                return this.mUIĐăngNhậpClient;
            }
        }
        
        public UITxtuserWindow UITxtuserWindow
        {
            get
            {
                if ((this.mUITxtuserWindow == null))
                {
                    this.mUITxtuserWindow = new UITxtuserWindow(this);
                }
                return this.mUITxtuserWindow;
            }
        }
        
        public UITxtpassWindow UITxtpassWindow
        {
            get
            {
                if ((this.mUITxtpassWindow == null))
                {
                    this.mUITxtpassWindow = new UITxtpassWindow(this);
                }
                return this.mUITxtpassWindow;
            }
        }

        public UITxtTrangThaiWindow UITrangThaiWindow
        {
            get
            {
                if ((this.mUITxtTrangThaiWindow == null))
                {
                    this.mUITxtTrangThaiWindow = new UITxtTrangThaiWindow(this);
                }
                return this.mUITxtTrangThaiWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIĐăngNhậpClient mUIĐăngNhậpClient;
        
        private UITxtuserWindow mUITxtuserWindow;

        private UITxtTrangThaiWindow mUITxtTrangThaiWindow;
        
        private UITxtpassWindow mUITxtpassWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIĐăngNhậpClient : WinClient
    {
        
        public UIĐăngNhậpClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Đăng Nhập";
            this.WindowTitles.Add("Đăng Nhập");
            #endregion
        }
        
        #region Properties
        public WinWindow UITxtuserWindow
        {
            get
            {
                if ((this.mUITxtuserWindow == null))
                {
                    this.mUITxtuserWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUITxtuserWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUITxtuserWindow.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
                    this.mUITxtuserWindow.WindowTitles.Add("Đăng Nhập");
                    #endregion
                }
                return this.mUITxtuserWindow;
            }
        }
        
        public WinWindow UIExitWindow
        {
            get
            {
                if ((this.mUIExitWindow == null))
                {
                    this.mUIExitWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIExitWindow.SearchProperties[WinWindow.PropertyNames.Name] = "Exit";
                    this.mUIExitWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.BUTTON", PropertyExpressionOperator.Contains));
                    this.mUIExitWindow.WindowTitles.Add("Đăng Nhập");
                    #endregion
                }
                return this.mUIExitWindow;
            }
        }
        
        public WinWindow UITxtTrangThaiWindow
        {
            get
            {
                if ((this.mUITxtTrangThaiWindow == null))
                {
                    this.mUITxtTrangThaiWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUITxtTrangThaiWindow.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Trạng Thái";
                    this.mUITxtTrangThaiWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUITxtTrangThaiWindow.WindowTitles.Add("Đăng Nhập");
                    #endregion
                }
                return this.mUITxtTrangThaiWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUITxtuserWindow;
        
        private WinWindow mUIExitWindow;
        
        private WinWindow mUITxtTrangThaiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITxtuserWindow : WinWindow
    {
        
        public UITxtuserWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtuser";
            this.WindowTitles.Add("Đăng Nhập");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtuserEdit
        {
            get
            {
                if ((this.mUITxtuserEdit == null))
                {
                    this.mUITxtuserEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtuserEdit.WindowTitles.Add("Đăng Nhập");
                    #endregion
                }
                return this.mUITxtuserEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtuserEdit;
        #endregion
    }
    




    //trnag thai
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITxtTrangThaiWindow : WinWindow
    {

        public UITxtTrangThaiWindow(UITestControl searchLimitContainer) :
            base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtTrangThai";
            this.WindowTitles.Add("Trạng Thái");
            #endregion
        }

        #region Properties
        public WinEdit UITxtTrangThaiEdit
        {
            get
            {
                if ((this.mUITxtTrangThaiEdit == null))
                {
                    this.mUITxtTrangThaiEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtTrangThaiEdit.WindowTitles.Add("Trạng Thái");
                    #endregion
                }
                return this.mUITxtTrangThaiEdit;
            }
        }
        #endregion

        #region Fields
        private WinEdit mUITxtTrangThaiEdit;
        #endregion
    }
    





    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITxtpassWindow : WinWindow
    {
        
        public UITxtpassWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtpass";
            this.WindowTitles.Add("Đăng Nhập");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtpassEdit
        {
            get
            {
                if ((this.mUITxtpassEdit == null))
                {
                    this.mUITxtpassEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtpassEdit.WindowTitles.Add("Đăng Nhập");
                    #endregion
                }
                return this.mUITxtpassEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtpassEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmddn";
            this.WindowTitles.Add("Đăng Nhập");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Đăng Nhập");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
}
