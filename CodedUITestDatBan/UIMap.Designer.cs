// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestDatBan
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod_ThanhCong - Use 'RecordedMethod_ThanhCongParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_ThanhCong()
        {
            #region Variable Declarations
            WinWindow uIItem1Window = this.UIBanWindow.UIPanel3Window.UIItem1Window;
            WinWindow uICbboxLoaiWindow = this.UIBanWindow.UIPanel1Window.UICbboxLoaiWindow;
            WinComboBox uICbboxLoaiComboBox = this.UIBanWindow.UICbboxLoaiWindow.UICbboxLoaiComboBox;
            WinWindow uIGọiMónWindow = this.UIBanWindow.UIPanel1Window.UIGọiMónWindow;
            #endregion



            // Click 'cbboxLoai' window
            Mouse.Hover(new Point(160, 700));
            Mouse.Click();


            Mouse.Hover(new Point(257, 130));
            Mouse.Click();

            // Select 'Trà' in 'cbboxLoai' combo box
            uICbboxLoaiComboBox.SelectedItem = this.RecordedMethod_ThanhCongParams.UICbboxLoaiComboBoxSelectedItem;

            // Click 'Gọi Món' window

            Mouse.Hover(new Point(800, 130));
            Mouse.Click();

        }
        
        /// <summary>
        /// AssertMethod_Thanhcong - Use 'AssertMethod_ThanhcongExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_Thanhcong()
        {
            #region Variable Declarations
            WinEdit uITxtGoiMonWindow = this.UIBanWindow.UITrangThaiWindow.UITxtTrangThaiEdit;
            #endregion

            // Verify that the 'ControlName' property of 'txtGoiMon' window equals 'Gọi món thành công'
            Assert.AreEqual(this.AssertMethod_ThanhcongExpectedValues.UITxtGoiMonWindowControlName, uITxtGoiMonWindow.Text, "lỗi");
        }
        
        #region Properties
        public virtual RecordedMethod_ThanhCongParams RecordedMethod_ThanhCongParams
        {
            get
            {
                if ((this.mRecordedMethod_ThanhCongParams == null))
                {
                    this.mRecordedMethod_ThanhCongParams = new RecordedMethod_ThanhCongParams();
                }
                return this.mRecordedMethod_ThanhCongParams;
            }
        }
        
        public virtual AssertMethod_ThanhcongExpectedValues AssertMethod_ThanhcongExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_ThanhcongExpectedValues == null))
                {
                    this.mAssertMethod_ThanhcongExpectedValues = new AssertMethod_ThanhcongExpectedValues();
                }
                return this.mAssertMethod_ThanhcongExpectedValues;
            }
        }
        
        public UIBanWindow UIBanWindow
        {
            get
            {
                if ((this.mUIBanWindow == null))
                {
                    this.mUIBanWindow = new UIBanWindow();
                }
                return this.mUIBanWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod_ThanhCongParams mRecordedMethod_ThanhCongParams;
        
        private AssertMethod_ThanhcongExpectedValues mAssertMethod_ThanhcongExpectedValues;
        
        private UIBanWindow mUIBanWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_ThanhCong'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedMethod_ThanhCongParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Trà' in 'cbboxLoai' combo box
        /// </summary>
        public string UICbboxLoaiComboBoxSelectedItem = "Trà";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_Thanhcong'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod_ThanhcongExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlName' property of 'txtGoiMon' window equals 'Gọi món thành công'
        /// </summary>
        public string UITxtGoiMonWindowControlName = "Gọi món thành công";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIBanWindow : WinWindow
    {
        
        public UIBanWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Ban";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ban");
            #endregion
        }
        
        #region Properties
        public UIPanel3Window UIPanel3Window
        {
            get
            {
                if ((this.mUIPanel3Window == null))
                {
                    this.mUIPanel3Window = new UIPanel3Window(this);
                }
                return this.mUIPanel3Window;
            }
        }
        
        public UIPanel1Window UIPanel1Window
        {
            get
            {
                if ((this.mUIPanel1Window == null))
                {
                    this.mUIPanel1Window = new UIPanel1Window(this);
                }
                return this.mUIPanel1Window;
            }
        }


        //trạng thái
        public UITxtTrangThaiWindow UITrangThaiWindow
        {
            get
            {
                if ((this.mUITxtTrangThaiWindow == null))
                {
                    this.mUITxtTrangThaiWindow = new UITxtTrangThaiWindow(this);
                }
                return this.mUITxtTrangThaiWindow;
            }
        }

        
        public UICbboxLoaiWindow UICbboxLoaiWindow
        {
            get
            {
                if ((this.mUICbboxLoaiWindow == null))
                {
                    this.mUICbboxLoaiWindow = new UICbboxLoaiWindow(this);
                }
                return this.mUICbboxLoaiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPanel3Window mUIPanel3Window;
        
        private UIPanel1Window mUIPanel1Window;

        private UITxtTrangThaiWindow mUITxtTrangThaiWindow;
        
        private UICbboxLoaiWindow mUICbboxLoaiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIPanel3Window : WinWindow
    {
        
        public UIPanel3Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "panel3";
            this.WindowTitles.Add("Ban");
            #endregion
        }
        
        #region Properties
        public WinWindow UIItem1Window
        {
            get
            {
                if ((this.mUIItem1Window == null))
                {
                    this.mUIItem1Window = new WinWindow(this);
                    #region Search Criteria
                    this.mUIItem1Window.SearchProperties[WinWindow.PropertyNames.Name] = "1";
                    this.mUIItem1Window.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.BUTTON", PropertyExpressionOperator.Contains));
                    this.mUIItem1Window.WindowTitles.Add("Ban");
                    #endregion
                }
                return this.mUIItem1Window;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUIItem1Window;
        #endregion
    }


    //trạng thái

    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITxtTrangThaiWindow : WinWindow
    {

        public UITxtTrangThaiWindow(UITestControl searchLimitContainer) :
            base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtGoiMon";
            this.WindowTitles.Add("Ban");
            #endregion
        }

        #region Properties
        public WinEdit UITxtTrangThaiEdit
        {
            get
            {
                if ((this.mUITxtTrangThaiEdit == null))
                {
                    this.mUITxtTrangThaiEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtTrangThaiEdit.WindowTitles.Add("Nhà Cung Cấp");
                    #endregion
                }
                return this.mUITxtTrangThaiEdit;
            }
        }
        #endregion

        #region Fields
        private WinEdit mUITxtTrangThaiEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIPanel1Window : WinWindow
    {
        
        public UIPanel1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "panel1";
            this.WindowTitles.Add("Ban");
            #endregion
        }
        
        #region Properties
        public WinWindow UICbboxLoaiWindow
        {
            get
            {
                if ((this.mUICbboxLoaiWindow == null))
                {
                    this.mUICbboxLoaiWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUICbboxLoaiWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.COMBOBOX", PropertyExpressionOperator.Contains));
                    this.mUICbboxLoaiWindow.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
                    this.mUICbboxLoaiWindow.WindowTitles.Add("Ban");
                    #endregion
                }
                return this.mUICbboxLoaiWindow;
            }
        }
        
        public WinWindow UIGọiMónWindow
        {
            get
            {
                if ((this.mUIGọiMónWindow == null))
                {
                    this.mUIGọiMónWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIGọiMónWindow.SearchProperties[WinWindow.PropertyNames.Name] = "Gọi Món";
                    this.mUIGọiMónWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.BUTTON", PropertyExpressionOperator.Contains));
                    this.mUIGọiMónWindow.WindowTitles.Add("Ban");
                    #endregion
                }
                return this.mUIGọiMónWindow;
            }
        }
        
        public WinWindow UITxtGoiMonWindow
        {
            get
            {
                if ((this.mUITxtGoiMonWindow == null))
                {
                    this.mUITxtGoiMonWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUITxtGoiMonWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUITxtGoiMonWindow.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
                    this.mUITxtGoiMonWindow.WindowTitles.Add("Ban");
                    #endregion
                }
                return this.mUITxtGoiMonWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUICbboxLoaiWindow;
        
        private WinWindow mUIGọiMónWindow;
        
        private WinWindow mUITxtGoiMonWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UICbboxLoaiWindow : WinWindow
    {
        
        public UICbboxLoaiWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cbboxLoai";
            this.WindowTitles.Add("Ban");
            #endregion
        }
        
        #region Properties
        public WinComboBox UICbboxLoaiComboBox
        {
            get
            {
                if ((this.mUICbboxLoaiComboBox == null))
                {
                    this.mUICbboxLoaiComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUICbboxLoaiComboBox.WindowTitles.Add("Ban");
                    #endregion
                }
                return this.mUICbboxLoaiComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUICbboxLoaiComboBox;
        #endregion
    }
}
